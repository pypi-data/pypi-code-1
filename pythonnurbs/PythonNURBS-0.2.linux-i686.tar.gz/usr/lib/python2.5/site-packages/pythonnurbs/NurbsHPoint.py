# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.31
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _NurbsHPoint
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


import NurbsPoint
class HPoint3Df(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HPoint3Df, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HPoint3Df, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _NurbsHPoint.HPoint3Df_data_set
    __swig_getmethods__["data"] = _NurbsHPoint.HPoint3Df_data_get
    if _newclass:data = _swig_property(_NurbsHPoint.HPoint3Df_data_get, _NurbsHPoint.HPoint3Df_data_set)
    __swig_setmethods__["created"] = _NurbsHPoint.HPoint3Df_created_set
    __swig_getmethods__["created"] = _NurbsHPoint.HPoint3Df_created_get
    if _newclass:created = _swig_property(_NurbsHPoint.HPoint3Df_created_get, _NurbsHPoint.HPoint3Df_created_set)
    def __init__(self, *args): 
        this = _NurbsHPoint.new_HPoint3Df(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _NurbsHPoint.delete_HPoint3Df
    __del__ = lambda self : None;
    def assign_from(*args): return _NurbsHPoint.HPoint3Df_assign_from(*args)
    def __iadd__(*args): return _NurbsHPoint.HPoint3Df___iadd__(*args)
    def __isub__(*args): return _NurbsHPoint.HPoint3Df___isub__(*args)
    def __imul__(*args): return _NurbsHPoint.HPoint3Df___imul__(*args)
    def __idiv__(*args): return _NurbsHPoint.HPoint3Df___idiv__(*args)
    def move(*args): return _NurbsHPoint.HPoint3Df_move(*args)
    def projectW(*args): return _NurbsHPoint.HPoint3Df_projectW(*args)
    def getx(*args): return _NurbsHPoint.HPoint3Df_getx(*args)
    def gety(*args): return _NurbsHPoint.HPoint3Df_gety(*args)
    def getz(*args): return _NurbsHPoint.HPoint3Df_getz(*args)
    def getw(*args): return _NurbsHPoint.HPoint3Df_getw(*args)
    def setx(*args): return _NurbsHPoint.HPoint3Df_setx(*args)
    def sety(*args): return _NurbsHPoint.HPoint3Df_sety(*args)
    def setz(*args): return _NurbsHPoint.HPoint3Df_setz(*args)
    def setw(*args): return _NurbsHPoint.HPoint3Df_setw(*args)
HPoint3Df_swigregister = _NurbsHPoint.HPoint3Df_swigregister
HPoint3Df_swigregister(HPoint3Df)
__mul__ = _NurbsHPoint.__mul__
__div__ = _NurbsHPoint.__div__

class HPoint2Df(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HPoint2Df, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HPoint2Df, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _NurbsHPoint.HPoint2Df_data_set
    __swig_getmethods__["data"] = _NurbsHPoint.HPoint2Df_data_get
    if _newclass:data = _swig_property(_NurbsHPoint.HPoint2Df_data_get, _NurbsHPoint.HPoint2Df_data_set)
    __swig_setmethods__["created"] = _NurbsHPoint.HPoint2Df_created_set
    __swig_getmethods__["created"] = _NurbsHPoint.HPoint2Df_created_get
    if _newclass:created = _swig_property(_NurbsHPoint.HPoint2Df_created_get, _NurbsHPoint.HPoint2Df_created_set)
    def __init__(self, *args): 
        this = _NurbsHPoint.new_HPoint2Df(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _NurbsHPoint.delete_HPoint2Df
    __del__ = lambda self : None;
    def assign_from(*args): return _NurbsHPoint.HPoint2Df_assign_from(*args)
    def __imul__(*args): return _NurbsHPoint.HPoint2Df___imul__(*args)
    def __idiv__(*args): return _NurbsHPoint.HPoint2Df___idiv__(*args)
    def __isub__(*args): return _NurbsHPoint.HPoint2Df___isub__(*args)
    def __iadd__(*args): return _NurbsHPoint.HPoint2Df___iadd__(*args)
    def move(*args): return _NurbsHPoint.HPoint2Df_move(*args)
    def projectW(*args): return _NurbsHPoint.HPoint2Df_projectW(*args)
    def getx(*args): return _NurbsHPoint.HPoint2Df_getx(*args)
    def gety(*args): return _NurbsHPoint.HPoint2Df_gety(*args)
    def getz(*args): return _NurbsHPoint.HPoint2Df_getz(*args)
    def getw(*args): return _NurbsHPoint.HPoint2Df_getw(*args)
    def setx(*args): return _NurbsHPoint.HPoint2Df_setx(*args)
    def sety(*args): return _NurbsHPoint.HPoint2Df_sety(*args)
    def setz(*args): return _NurbsHPoint.HPoint2Df_setz(*args)
    def setw(*args): return _NurbsHPoint.HPoint2Df_setw(*args)
HPoint2Df_swigregister = _NurbsHPoint.HPoint2Df_swigregister
HPoint2Df_swigregister(HPoint2Df)

class HPoint3Dd(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HPoint3Dd, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HPoint3Dd, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _NurbsHPoint.HPoint3Dd_data_set
    __swig_getmethods__["data"] = _NurbsHPoint.HPoint3Dd_data_get
    if _newclass:data = _swig_property(_NurbsHPoint.HPoint3Dd_data_get, _NurbsHPoint.HPoint3Dd_data_set)
    __swig_setmethods__["created"] = _NurbsHPoint.HPoint3Dd_created_set
    __swig_getmethods__["created"] = _NurbsHPoint.HPoint3Dd_created_get
    if _newclass:created = _swig_property(_NurbsHPoint.HPoint3Dd_created_get, _NurbsHPoint.HPoint3Dd_created_set)
    def __init__(self, *args): 
        this = _NurbsHPoint.new_HPoint3Dd(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _NurbsHPoint.delete_HPoint3Dd
    __del__ = lambda self : None;
    def assign_from(*args): return _NurbsHPoint.HPoint3Dd_assign_from(*args)
    def __iadd__(*args): return _NurbsHPoint.HPoint3Dd___iadd__(*args)
    def __isub__(*args): return _NurbsHPoint.HPoint3Dd___isub__(*args)
    def __imul__(*args): return _NurbsHPoint.HPoint3Dd___imul__(*args)
    def __idiv__(*args): return _NurbsHPoint.HPoint3Dd___idiv__(*args)
    def move(*args): return _NurbsHPoint.HPoint3Dd_move(*args)
    def projectW(*args): return _NurbsHPoint.HPoint3Dd_projectW(*args)
    def getx(*args): return _NurbsHPoint.HPoint3Dd_getx(*args)
    def gety(*args): return _NurbsHPoint.HPoint3Dd_gety(*args)
    def getz(*args): return _NurbsHPoint.HPoint3Dd_getz(*args)
    def getw(*args): return _NurbsHPoint.HPoint3Dd_getw(*args)
    def setx(*args): return _NurbsHPoint.HPoint3Dd_setx(*args)
    def sety(*args): return _NurbsHPoint.HPoint3Dd_sety(*args)
    def setz(*args): return _NurbsHPoint.HPoint3Dd_setz(*args)
    def setw(*args): return _NurbsHPoint.HPoint3Dd_setw(*args)
HPoint3Dd_swigregister = _NurbsHPoint.HPoint3Dd_swigregister
HPoint3Dd_swigregister(HPoint3Dd)

class HPoint2Dd(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HPoint2Dd, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HPoint2Dd, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _NurbsHPoint.HPoint2Dd_data_set
    __swig_getmethods__["data"] = _NurbsHPoint.HPoint2Dd_data_get
    if _newclass:data = _swig_property(_NurbsHPoint.HPoint2Dd_data_get, _NurbsHPoint.HPoint2Dd_data_set)
    __swig_setmethods__["created"] = _NurbsHPoint.HPoint2Dd_created_set
    __swig_getmethods__["created"] = _NurbsHPoint.HPoint2Dd_created_get
    if _newclass:created = _swig_property(_NurbsHPoint.HPoint2Dd_created_get, _NurbsHPoint.HPoint2Dd_created_set)
    def __init__(self, *args): 
        this = _NurbsHPoint.new_HPoint2Dd(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _NurbsHPoint.delete_HPoint2Dd
    __del__ = lambda self : None;
    def assign_from(*args): return _NurbsHPoint.HPoint2Dd_assign_from(*args)
    def __imul__(*args): return _NurbsHPoint.HPoint2Dd___imul__(*args)
    def __idiv__(*args): return _NurbsHPoint.HPoint2Dd___idiv__(*args)
    def __isub__(*args): return _NurbsHPoint.HPoint2Dd___isub__(*args)
    def __iadd__(*args): return _NurbsHPoint.HPoint2Dd___iadd__(*args)
    def move(*args): return _NurbsHPoint.HPoint2Dd_move(*args)
    def projectW(*args): return _NurbsHPoint.HPoint2Dd_projectW(*args)
    def getx(*args): return _NurbsHPoint.HPoint2Dd_getx(*args)
    def gety(*args): return _NurbsHPoint.HPoint2Dd_gety(*args)
    def getz(*args): return _NurbsHPoint.HPoint2Dd_getz(*args)
    def getw(*args): return _NurbsHPoint.HPoint2Dd_getw(*args)
    def setx(*args): return _NurbsHPoint.HPoint2Dd_setx(*args)
    def sety(*args): return _NurbsHPoint.HPoint2Dd_sety(*args)
    def setz(*args): return _NurbsHPoint.HPoint2Dd_setz(*args)
    def setw(*args): return _NurbsHPoint.HPoint2Dd_setw(*args)
HPoint2Dd_swigregister = _NurbsHPoint.HPoint2Dd_swigregister
HPoint2Dd_swigregister(HPoint2Dd)



